// <auto-generated />
using System;
using FitBites.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitBites.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250611084147_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("FitBites.Domain.Entities.CookingMethodDict", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name");

                    b.HasIndex("SortOrder");

                    b.HasIndex("Status");

                    b.ToTable("CookingMethodDicts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff1"),
                            Code = "FRY",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "快速翻炒烹饪方式",
                            Name = "炒",
                            SortOrder = 1,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff2"),
                            Code = "STEAM",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "蒸汽加热烹饪方式",
                            Name = "蒸",
                            SortOrder = 2,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff3"),
                            Code = "BOIL",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "水煮烹饪方式",
                            Name = "煮",
                            SortOrder = 3,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff4"),
                            Code = "STEW",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "慢火长时间烹饪方式",
                            Name = "炖",
                            SortOrder = 4,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff5"),
                            Code = "DEEP_FRY",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "油炸烹饪方式",
                            Name = "炸",
                            SortOrder = 5,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff6"),
                            Code = "BAKE",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "烤箱烹饪方式",
                            Name = "烤",
                            SortOrder = 6,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff7"),
                            Code = "SAUTE",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "小火煎制烹饪方式",
                            Name = "煎",
                            SortOrder = 7,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff8"),
                            Code = "BRAISE",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "加盖闷煮烹饪方式",
                            Name = "焖",
                            SortOrder = 8,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff9"),
                            Code = "COLD_DISH",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "不需加热直接食用的烹饪方式",
                            Name = "冷菜",
                            SortOrder = 9,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bffa"),
                            Code = "FERMENT",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "通过微生物作用发酵制作的烹饪方式",
                            Name = "发酵",
                            SortOrder = 10,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FitBites.Domain.Entities.CuisineDict", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name");

                    b.HasIndex("SortOrder");

                    b.HasIndex("Status");

                    b.ToTable("CuisineDicts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff1"),
                            Code = "SICHUAN",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "四川菜系，特点是麻辣鲜香",
                            Name = "川菜",
                            SortOrder = 1,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff2"),
                            Code = "CANTONESE",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "广东菜系，特点是清淡鲜美",
                            Name = "粤菜",
                            SortOrder = 2,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff3"),
                            Code = "SHANDONG",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "山东菜系，特点是咸鲜为主",
                            Name = "鲁菜",
                            SortOrder = 3,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff4"),
                            Code = "JIANGSU",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "江苏菜系，特点是清鲜甘醇",
                            Name = "苏菜",
                            SortOrder = 4,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff5"),
                            Code = "ZHEJIANG",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "浙江菜系，特点是鲜嫩脆爽",
                            Name = "浙菜",
                            SortOrder = 5,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff6"),
                            Code = "ANHUI",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "安徽菜系，特点是注重火功",
                            Name = "徽菜",
                            SortOrder = 6,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff7"),
                            Code = "FUJIAN",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "福建菜系，特点是清鲜、和、精",
                            Name = "闽菜",
                            SortOrder = 7,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff8"),
                            Code = "HUNAN",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "湖南菜系，特点是香辣酸",
                            Name = "湘菜",
                            SortOrder = 8,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff9"),
                            Code = "WESTERN",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "西方国家菜系",
                            Name = "西餐",
                            SortOrder = 9,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cffa"),
                            Code = "JAPANESE",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "日本料理",
                            Name = "日料",
                            SortOrder = 10,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cffb"),
                            Code = "KOREAN",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "韩国料理",
                            Name = "韩餐",
                            SortOrder = 11,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FitBites.Domain.Entities.Family", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FamilyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("OwnerUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyCode")
                        .IsUnique();

                    b.HasIndex("FamilyName");

                    b.HasIndex("OwnerUserId");

                    b.ToTable("Families", (string)null);
                });

            modelBuilder.Entity("FitBites.Domain.Entities.FamilyMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("FamilyId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MemberRole")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.HasIndex("MemberRole");

                    b.HasIndex("UserId");

                    b.HasIndex("FamilyId", "UserId")
                        .IsUnique();

                    b.ToTable("FamilyMembers", (string)null);
                });

            modelBuilder.Entity("FitBites.Domain.Entities.HumanGroupDict", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("HumanGroupDicts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afb1"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "怀孕期间的女性",
                            Name = "孕妇",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afb2"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "哺乳期间的女性",
                            Name = "哺乳期",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afb3"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3岁以下儿童",
                            Name = "婴幼儿",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afb4"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "3-12岁儿童",
                            Name = "儿童",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afb5"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "65岁以上老年人",
                            Name = "老人",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afb6"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "糖尿病患者",
                            Name = "糖尿病",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afb7"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "高血压患者",
                            Name = "高血压",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afb8"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "高血脂患者",
                            Name = "高血脂",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FitBites.Domain.Entities.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("CookingBehavior")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FlavorProfile")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MainFunctions")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PreferredUsage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Volatile")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("WaterContent")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("FlavorProfile");

                    b.HasIndex("Name");

                    b.ToTable("Ingredients", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa01"),
                            Category = 0,
                            CookingBehavior = "易熟易老",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "鲜味",
                            MainFunctions = "提供优质蛋白质",
                            Name = "鸡胸肉",
                            Notes = "优质蛋白质来源，低脂肪",
                            PreferredUsage = "切片,切丁",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "中"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa02"),
                            Category = 1,
                            CookingBehavior = "易碎,吸味",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "清淡",
                            MainFunctions = "提供植物蛋白",
                            Name = "豆腐",
                            Notes = "富含植物蛋白和钙质",
                            PreferredUsage = "切块,炸,烫",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa03"),
                            Category = 2,
                            CookingBehavior = "爆炒保脆",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "微辣,清香",
                            MainFunctions = "提供维生素C",
                            Name = "青椒",
                            Notes = "富含维生素C和抗氧化物质",
                            PreferredUsage = "切丝,切块",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa04"),
                            Category = 4,
                            CookingBehavior = "爆香",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "辛辣",
                            MainFunctions = "去腥,提香",
                            Name = "姜",
                            Notes = "常用于提味和去腥",
                            PreferredUsage = "切片,切丝,切末",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = true,
                            WaterContent = "中"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa05"),
                            Category = 4,
                            CookingBehavior = "爆香",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "辛辣",
                            MainFunctions = "提香,增味",
                            Name = "蒜",
                            Notes = "常用于提味和增香",
                            PreferredUsage = "切片,切末,压泥",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = true,
                            WaterContent = "低"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa06"),
                            Category = 4,
                            CookingBehavior = "易糊",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "咸鲜",
                            MainFunctions = "调味,上色",
                            Name = "酱油",
                            Notes = "提供咸鲜味和褐色",
                            PreferredUsage = "调味",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa07"),
                            Category = 4,
                            CookingBehavior = "增强口感",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "咸",
                            MainFunctions = "调味",
                            Name = "盐",
                            Notes = "基础调味品",
                            PreferredUsage = "调味",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "极低"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa08"),
                            Category = 5,
                            CookingBehavior = "爽脆,吸味",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "清香",
                            MainFunctions = "补血,清肠",
                            Name = "木耳",
                            Notes = "富含膳食纤维和铁质",
                            PreferredUsage = "泡发,切碎",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "低(干品), 高(泡发后)"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa09"),
                            Category = 0,
                            CookingBehavior = "纤维感强,需要煮烂",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "鲜香",
                            MainFunctions = "提供优质蛋白质和铁质",
                            Name = "牛肉",
                            Notes = "富含优质蛋白质和铁质，有助于补血",
                            PreferredUsage = "切片,切丁,切条",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "低"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa10"),
                            Category = 0,
                            CookingBehavior = "油脂较多",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "鲜甜",
                            MainFunctions = "提供蛋白质和脂肪",
                            Name = "猪肉",
                            Notes = "常见肉类，口感滑嫩",
                            PreferredUsage = "切片,切丝,剁馅",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "中"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa11"),
                            Category = 0,
                            CookingBehavior = "需要长时间烹煮才够酥烂",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "肥美",
                            MainFunctions = "提供丰富脂肪和蛋白质",
                            Name = "五花肉",
                            Notes = "肥瘦相间，适合红烧、扣肉等",
                            PreferredUsage = "切片,切块",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "极低"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa12"),
                            Category = 0,
                            CookingBehavior = "肉质细嫩,需去膻",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "膻香",
                            MainFunctions = "提供蛋白质和维生素",
                            Name = "羊肉",
                            Notes = "温补食材，冬季常食",
                            PreferredUsage = "切片,切块",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "低"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa13"),
                            Category = 0,
                            CookingBehavior = "肉质较韧,需适当烹煮",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "鲜香",
                            MainFunctions = "提供蛋白质和脂肪",
                            Name = "鸭肉",
                            Notes = "肉质细嫩，脂肪含量适中",
                            PreferredUsage = "切块,切片",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "低"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa14"),
                            Category = 7,
                            CookingBehavior = "肉质脆嫩,易碎",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "鲜香",
                            MainFunctions = "提供优质蛋白质和不饱和脂肪酸",
                            Name = "鱼肉",
                            Notes = "富含蛋白质和DHA，有益健康",
                            PreferredUsage = "片,切块",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa15"),
                            Category = 7,
                            CookingBehavior = "肉质爽脆,易熟",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "鲜甜",
                            MainFunctions = "提供优质蛋白质和矿物质",
                            Name = "虾",
                            Notes = "富含蛋白质，口感鲜甜",
                            PreferredUsage = "去壳,拍扁",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa16"),
                            Category = 7,
                            CookingBehavior = "需要适当处理",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "鲜美",
                            MainFunctions = "提供优质蛋白质",
                            Name = "螃蟹",
                            Notes = "鲜美海鲜，富含蛋白质",
                            PreferredUsage = "清洗,去壳",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "中"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa17"),
                            Category = 2,
                            CookingBehavior = "吸油,易软烂",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "清淡",
                            MainFunctions = "提供膳食纤维",
                            Name = "茄子",
                            Notes = "质地柔软，吸味能力强",
                            PreferredUsage = "切块,切条",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa18"),
                            Category = 2,
                            CookingBehavior = "煮熟才可食用",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "清淡微甜",
                            MainFunctions = "提供碳水化合物和维生素C",
                            Name = "土豆",
                            Notes = "富含淀粉，可作主食或配菜",
                            PreferredUsage = "切丝,切片,切块",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "中"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa19"),
                            Category = 2,
                            CookingBehavior = "脆嫩多汁",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "清爽",
                            MainFunctions = "补水,提供膳食纤维",
                            Name = "黄瓜",
                            Notes = "水分充足，适合生食凉拌",
                            PreferredUsage = "切片,切条,拍碎",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "极高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa20"),
                            Category = 2,
                            CookingBehavior = "多汁,酸甜",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "酸甜",
                            MainFunctions = "提供维生素C和番茄红素",
                            Name = "西红柿",
                            Notes = "富含番茄红素，有抗氧化作用",
                            PreferredUsage = "切片,切块",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa21"),
                            Category = 2,
                            CookingBehavior = "香味浓郁",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "独特香气",
                            MainFunctions = "提供膳食纤维和维生素",
                            Name = "韭菜",
                            Notes = "香气浓郁，常与鸡蛋同炒",
                            PreferredUsage = "切段",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa22"),
                            Category = 4,
                            CookingBehavior = "香味浓郁",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "辛香",
                            MainFunctions = "提香,增味",
                            Name = "葱",
                            Notes = "常用调味品，提香去腥",
                            PreferredUsage = "切段,切丝,切花",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = true,
                            WaterContent = "高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa23"),
                            Category = 11,
                            CookingBehavior = "熟制方式多样",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "鲜香",
                            MainFunctions = "提供优质蛋白质",
                            Name = "鸡蛋",
                            Notes = "营养丰富，烹饪方式多样",
                            PreferredUsage = "打散,煎,蒸",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "低"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa24"),
                            Category = 6,
                            CookingBehavior = "口感柔软",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "淡香",
                            MainFunctions = "提供碳水化合物",
                            Name = "米饭",
                            Notes = "主食，可做多种米饭料理",
                            PreferredUsage = "蒸熟,炒",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "低"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa25"),
                            Category = 6,
                            CookingBehavior = "韧性好",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "麦香",
                            MainFunctions = "提供碳水化合物",
                            Name = "面条",
                            Notes = "多种烹饪方式，可做汤面或炒面",
                            PreferredUsage = "煮,炒,拌",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "低"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa26"),
                            Category = 4,
                            CookingBehavior = "麻味强烈",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "麻香",
                            MainFunctions = "增香,提味",
                            Name = "花椒",
                            Notes = "川菜常用调料，有独特麻味",
                            PreferredUsage = "炒香,研磨",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = true,
                            WaterContent = "极低"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa27"),
                            Category = 4,
                            CookingBehavior = "辣味浓郁",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "辣",
                            MainFunctions = "增辣,提色",
                            Name = "干辣椒",
                            Notes = "增添菜品辣味和红色",
                            PreferredUsage = "切段,泡发,炒香",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = true,
                            WaterContent = "极低"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa28"),
                            Category = 5,
                            CookingBehavior = "鲜香味浓",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "鲜香",
                            MainFunctions = "提供膳食纤维和蛋白质",
                            Name = "香菇",
                            Notes = "菌类食材，风味独特",
                            PreferredUsage = "切片,切丁",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa29"),
                            Category = 2,
                            CookingBehavior = "爽脆清香",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "清香",
                            MainFunctions = "提供维生素和膳食纤维",
                            Name = "西兰花",
                            Notes = "富含维生素C和膳食纤维",
                            PreferredUsage = "切小朵",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa30"),
                            Category = 2,
                            CookingBehavior = "质地柔嫩",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "清香",
                            MainFunctions = "提供膳食纤维和维生素",
                            Name = "油菜",
                            Notes = "叶绿菜，营养丰富易消化",
                            PreferredUsage = "切段",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa31"),
                            Category = 2,
                            CookingBehavior = "脆嫩多孔",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "清甜",
                            MainFunctions = "提供淀粉和膳食纤维",
                            Name = "莲藕",
                            Notes = "爽脆可口，可凉拌或炖煮",
                            PreferredUsage = "切片,切丁",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "中"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa32"),
                            Category = 0,
                            CookingBehavior = "骨肉相连",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "鲜香",
                            MainFunctions = "提供蛋白质和钙质",
                            Name = "排骨",
                            Notes = "肉质鲜嫩，骨髓丰富",
                            PreferredUsage = "切段",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "低"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa33"),
                            Category = 7,
                            CookingBehavior = "肉多刺多",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "鲜美",
                            MainFunctions = "提供蛋白质和胶原蛋白",
                            Name = "鱼头",
                            Notes = "肉质鲜嫩，适合炖煮或蒸制",
                            PreferredUsage = "切块",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "中"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa34"),
                            Category = 2,
                            CookingBehavior = "咸味浓郁",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "咸香",
                            MainFunctions = "提供膳食纤维",
                            Name = "梅菜",
                            Notes = "腌制蔬菜，咸香可口",
                            PreferredUsage = "泡发,切碎",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "中"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa35"),
                            Category = 2,
                            CookingBehavior = "需煮熟食用",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "清香",
                            MainFunctions = "提供膳食纤维和蛋白质",
                            Name = "四季豆",
                            Notes = "含植物蛋白，煮熟后食用",
                            PreferredUsage = "切段,去筋",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa36"),
                            Category = 0,
                            CookingBehavior = "脆嫩爽口",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "鲜香",
                            MainFunctions = "提供蛋白质",
                            Name = "鸭肠",
                            Notes = "脆嫩有弹性，口感独特",
                            PreferredUsage = "清洗,切段",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "低"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa37"),
                            Category = 2,
                            CookingBehavior = "酸味浓郁",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "酸爽",
                            MainFunctions = "提供益生菌和膳食纤维",
                            Name = "酸菜",
                            Notes = "发酵蔬菜，酸爽开胃",
                            PreferredUsage = "切段,挤干",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa38"),
                            Category = 6,
                            CookingBehavior = "柔滑爽口",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "米香",
                            MainFunctions = "提供碳水化合物",
                            Name = "河粉",
                            Notes = "宽扁米粉，口感滑爽",
                            PreferredUsage = "焯水,炒",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "低"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa39"),
                            Category = 4,
                            CookingBehavior = "香味独特",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "清香",
                            MainFunctions = "提香,去腥",
                            Name = "香茅",
                            Notes = "泰国料理常用香料",
                            PreferredUsage = "切段,拍松",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = true,
                            WaterContent = "高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa40"),
                            Category = 4,
                            CookingBehavior = "香气浓郁",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "清香",
                            MainFunctions = "提香,增味",
                            Name = "柠檬叶",
                            Notes = "泰国料理常用香料，柑橘香气",
                            PreferredUsage = "切片,整叶",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = true,
                            WaterContent = "高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa41"),
                            Category = 2,
                            CookingBehavior = "口感柔嫩",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "清甜",
                            MainFunctions = "提供膳食纤维和维生素",
                            Name = "白菜",
                            Notes = "常见蔬菜，可炒可煮可腌制",
                            PreferredUsage = "切段,切片",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa42"),
                            Category = 2,
                            CookingBehavior = "脆嫩多水",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "清爽",
                            MainFunctions = "提供膳食纤维和维生素",
                            Name = "生菜",
                            Notes = "多水脆嫩，常用于沙拉",
                            PreferredUsage = "撕片,整叶",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "极高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa43"),
                            Category = 0,
                            CookingBehavior = "纤维较多,需炖煮",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "浓香",
                            MainFunctions = "提供蛋白质和胶原蛋白",
                            Name = "牛腩",
                            Notes = "肉质紧实，需长时间炖煮",
                            PreferredUsage = "切块",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "低"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa44"),
                            Category = 4,
                            CookingBehavior = "浓稠鲜香",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "鲜咸",
                            MainFunctions = "提鲜,增香",
                            Name = "蚝油",
                            Notes = "浓稠酱料，增添鲜味",
                            PreferredUsage = "调味",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "中"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa45"),
                            Category = 4,
                            CookingBehavior = "辣味浓郁",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "辣咸",
                            MainFunctions = "增辣,提味",
                            Name = "剁椒",
                            Notes = "湖南特色调味品，辣咸开胃",
                            PreferredUsage = "调味",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "低"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa46"),
                            Category = 4,
                            CookingBehavior = "香气独特",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "香辣",
                            MainFunctions = "增香,提味",
                            Name = "孜然",
                            Notes = "西北风味调料，香气特殊",
                            PreferredUsage = "研磨,撒面",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = true,
                            WaterContent = "极低"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa47"),
                            Category = 4,
                            CookingBehavior = "酸甜平衡",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "酸甜",
                            MainFunctions = "调味,提鲜",
                            Name = "寿司醋",
                            Notes = "制作寿司的专用调味料",
                            PreferredUsage = "调味",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "中"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa48"),
                            Category = 7,
                            CookingBehavior = "薄脆",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "海鲜香",
                            MainFunctions = "包裹,装饰",
                            Name = "海苔",
                            Notes = "日本料理常用食材",
                            PreferredUsage = "切片,整片",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "高"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa49"),
                            Category = 1,
                            CookingBehavior = "质地筋道",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "豆香",
                            MainFunctions = "提供植物蛋白",
                            Name = "腐竹",
                            Notes = "富含植物蛋白，口感筋道",
                            PreferredUsage = "泡发,切段",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = false,
                            WaterContent = "低"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa50"),
                            Category = 8,
                            CookingBehavior = "香气浓郁",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlavorProfile = "香浓",
                            MainFunctions = "增香,装饰",
                            Name = "芝麻",
                            Notes = "增添香气和装饰效果",
                            PreferredUsage = "炒香,研磨",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Volatile = true,
                            WaterContent = "极低"
                        });
                });

            modelBuilder.Entity("FitBites.Domain.Entities.IngredientHumanGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Effect")
                        .HasColumnType("int");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("HumanGroupDictId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Effect");

                    b.HasIndex("GroupId");

                    b.HasIndex("HumanGroupDictId");

                    b.HasIndex("IngredientId");

                    b.HasIndex("IngredientId", "GroupId")
                        .IsUnique();

                    b.ToTable("IngredientHumanGroups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ac01"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Effect = 0,
                            GroupId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afb1"),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa01"),
                            Notes = "优质蛋白质来源，适合孕期补充营养",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ac02"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Effect = 0,
                            GroupId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afb6"),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa01"),
                            Notes = "低脂肪高蛋白，适合糖尿病人食用",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ac03"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Effect = 0,
                            GroupId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afb7"),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa02"),
                            Notes = "低钠高钙，适合高血压患者",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ac04"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Effect = 1,
                            GroupId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afb5"),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa03"),
                            Notes = "部分老人可能不易消化青椒的皮",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ac05"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Effect = 0,
                            GroupId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afb8"),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa08"),
                            Notes = "含有膳食纤维，有助降低血脂",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ac06"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Effect = 0,
                            GroupId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afb1"),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa08"),
                            Notes = "富含铁质，有助预防孕期贫血",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FitBites.Domain.Entities.IngredientNutrition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("NutrientId")
                        .HasColumnType("char(36)");

                    b.Property<string>("PerUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("NutrientId");

                    b.HasIndex("IngredientId", "NutrientId")
                        .IsUnique();

                    b.ToTable("IngredientNutritions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab01"),
                            Amount = 113m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa01"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab02"),
                            Amount = 23.3m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa01"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd2"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab03"),
                            Amount = 1.5m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa01"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd3"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab04"),
                            Amount = 76m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa02"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab05"),
                            Amount = 8.1m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa02"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd2"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab06"),
                            Amount = 20m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa03"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab07"),
                            Amount = 1.4m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa03"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd5"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab08"),
                            Amount = 284m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa08"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g干品",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab09"),
                            Amount = 38.9m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa08"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd5"),
                            PerUnit = "100g干品",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab10"),
                            Amount = 125m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa09"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab11"),
                            Amount = 22.5m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa09"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd2"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab12"),
                            Amount = 3.8m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa09"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd3"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab13"),
                            Amount = 3.0m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa09"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afe1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab14"),
                            Amount = 143m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa10"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab15"),
                            Amount = 18.5m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa10"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd2"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab16"),
                            Amount = 8.0m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa10"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd3"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab17"),
                            Amount = 395m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa11"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab18"),
                            Amount = 12.5m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa11"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd2"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab19"),
                            Amount = 37.5m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa11"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd3"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab20"),
                            Amount = 106m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa14"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab21"),
                            Amount = 20.1m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa14"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd2"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab22"),
                            Amount = 2.5m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa14"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd3"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab23"),
                            Amount = 95m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa15"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab24"),
                            Amount = 20.3m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa15"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd2"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab25"),
                            Amount = 1.1m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa15"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd3"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab26"),
                            Amount = 24m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa17"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab27"),
                            Amount = 5.7m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa17"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd4"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab28"),
                            Amount = 2.5m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa17"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd5"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab29"),
                            Amount = 81m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa18"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab30"),
                            Amount = 19.1m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa18"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd4"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab31"),
                            Amount = 27m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa18"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd7"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab32"),
                            Amount = 18m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa20"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab33"),
                            Amount = 14m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa20"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd7"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab34"),
                            Amount = 15m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa19"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab35"),
                            Amount = 0.8m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa19"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd5"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab36"),
                            Amount = 144m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa23"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab37"),
                            Amount = 12.8m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa23"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd2"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab38"),
                            Amount = 10.3m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa23"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd3"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab39"),
                            Amount = 116m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa24"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab40"),
                            Amount = 25.9m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa24"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd4"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab41"),
                            Amount = 138m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa25"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab42"),
                            Amount = 28.7m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa25"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd4"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab43"),
                            Amount = 34m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa28"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab44"),
                            Amount = 2.5m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa28"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd5"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab45"),
                            Amount = 34m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa29"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab46"),
                            Amount = 89m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa29"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd7"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab47"),
                            Amount = 20m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa30"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab48"),
                            Amount = 35m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa30"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd7"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab49"),
                            Amount = 74m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa31"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab50"),
                            Amount = 17.5m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa31"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd4"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab51"),
                            Amount = 213m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa32"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab52"),
                            Amount = 16.9m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa32"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd2"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab53"),
                            Amount = 15.2m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa32"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd3"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab54"),
                            Amount = 12m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa41"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab55"),
                            Amount = 27m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa41"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd7"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab56"),
                            Amount = 15m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa42"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab57"),
                            Amount = 9m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa42"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd7"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab58"),
                            Amount = 252m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa43"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab59"),
                            Amount = 19.5m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa43"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd2"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab60"),
                            Amount = 18.7m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa43"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd3"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab61"),
                            Amount = 27m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa21"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab62"),
                            Amount = 27m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa21"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd7"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab63"),
                            Amount = 203m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa12"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab64"),
                            Amount = 18.8m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa12"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd2"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab65"),
                            Amount = 14.5m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa12"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd3"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab66"),
                            Amount = 240m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa13"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab67"),
                            Amount = 16.2m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa13"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd2"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab68"),
                            Amount = 19.7m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa13"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd3"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab69"),
                            Amount = 33m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa35"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ab70"),
                            Amount = 1.9m,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa35"),
                            NutrientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd2"),
                            PerUnit = "100g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FitBites.Domain.Entities.IngredientNutritionDict", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("IngredientNutritionDicts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd1"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "食物中所含的热量，表示为千卡",
                            Name = "能量",
                            Unit = "kcal",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd2"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "食物中所含的蛋白质总量",
                            Name = "蛋白质",
                            Unit = "g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd3"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "食物中所含的脂肪总量",
                            Name = "脂肪",
                            Unit = "g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd4"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "食物中所含的碳水化合物总量",
                            Name = "碳水化合物",
                            Unit = "g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd5"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "食物中所含的膳食纤维总量",
                            Name = "膳食纤维",
                            Unit = "g",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd6"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "食物中所含的维生素A总量",
                            Name = "维生素A",
                            Unit = "μg",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd7"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "食物中所含的维生素C总量",
                            Name = "维生素C",
                            Unit = "mg",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd8"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "食物中所含的维生素E总量",
                            Name = "维生素E",
                            Unit = "mg",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afd9"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "食物中所含的钙元素总量",
                            Name = "钙",
                            Unit = "mg",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afe1"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "食物中所含的铁元素总量",
                            Name = "铁",
                            Unit = "mg",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afe2"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "食物中所含的锌元素总量",
                            Name = "锌",
                            Unit = "mg",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afe3"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "食物中所含的钾元素总量",
                            Name = "钾",
                            Unit = "mg",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afe4"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "食物中所含的钠元素总量",
                            Name = "钠",
                            Unit = "mg",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FitBites.Domain.Entities.IngredientPreprocess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("DurationSec")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("IngredientId1")
                        .HasColumnType("char(36)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TemperatureDesc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("IngredientId1");

                    b.HasIndex("Method");

                    b.ToTable("IngredientPreprocesses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad01"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将鸡胸肉洗净，切成细丝，便于快速烹饪",
                            DurationSec = 120,
                            ImageUrl = "/assets/images/preprocess/chicken-slice.jpg",
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa01"),
                            Method = "切丝",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad02"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将切好的鸡胸肉加入盐、淀粉和料酒腌制入味",
                            DurationSec = 600,
                            ImageUrl = "/assets/images/preprocess/chicken-marinate.jpg",
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa01"),
                            Method = "腌制",
                            TemperatureDesc = "冷藏",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad03"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将豆腐切成均匀的小方块",
                            DurationSec = 60,
                            ImageUrl = "/assets/images/preprocess/tofu-cube.jpg",
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa02"),
                            Method = "切块",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad04"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将豆腐块放入沸水中焯烫30秒，捞出沥干水分",
                            DurationSec = 30,
                            ImageUrl = "/assets/images/preprocess/tofu-blanch.jpg",
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa02"),
                            Method = "焯水",
                            TemperatureDesc = "沸水",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad05"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将青椒洗净，去蒂和籽，切成细丝",
                            DurationSec = 60,
                            ImageUrl = "/assets/images/preprocess/pepper-slice.jpg",
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa03"),
                            Method = "切丝",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad06"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将干木耳放入冷水中浸泡至完全泡发",
                            DurationSec = 7200,
                            ImageUrl = "/assets/images/preprocess/black-fungus-soak.jpg",
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa08"),
                            Method = "泡发",
                            TemperatureDesc = "冷水",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad07"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将泡发后的木耳去除根部和硬质部分",
                            DurationSec = 120,
                            ImageUrl = "/assets/images/preprocess/black-fungus-clean.jpg",
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa08"),
                            Method = "去杂",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad08"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将姜去皮洗净后切成细末，便于爆香提味",
                            DurationSec = 60,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa04"),
                            Method = "切末",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad09"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将姜去皮洗净后切成薄片，适合用于煮汤或焖煮菜肴",
                            DurationSec = 60,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa04"),
                            Method = "切片",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad10"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将蒜去皮后切成细末，便于爆香增味",
                            DurationSec = 60,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa05"),
                            Method = "切末",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad11"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将蒜瓣用刀背拍碎，保留整体形状，适合烹饪大块食材",
                            DurationSec = 30,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa05"),
                            Method = "拍碎",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad12"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "根据菜式需要与其他调料混合调配，如加入糖、料酒等",
                            DurationSec = 60,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa06"),
                            Method = "调配",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad13"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将牛肉逆着纹理切成薄片，适合快炒或火锅",
                            DurationSec = 120,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa09"),
                            Method = "切片",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad14"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将牛肉切成1-2厘米的小丁，适合红烧或炖煮",
                            DurationSec = 90,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa09"),
                            Method = "切丁",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad15"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将牛肉加入料酒、酱油、姜片等腌制入味",
                            DurationSec = 300,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa09"),
                            Method = "腌制",
                            TemperatureDesc = "冷藏",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad16"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将猪肉切成细丝，适合炒菜",
                            DurationSec = 90,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa10"),
                            Method = "切丝",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad17"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将猪肉剁成肉末，适合肉馅或肉沫炒菜",
                            DurationSec = 120,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa10"),
                            Method = "剁末",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad18"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将五花肉切成薄片，适合煸炒或烤制",
                            DurationSec = 90,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa11"),
                            Method = "切片",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad19"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将五花肉切成方块，适合红烧或炖煮",
                            DurationSec = 60,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa11"),
                            Method = "切块",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad20"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将茄子切成长条，适合炒菜或炸制",
                            DurationSec = 60,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa17"),
                            Method = "切条",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad21"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将茄子切成方块，适合烧煮或炖汤",
                            DurationSec = 60,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa17"),
                            Method = "切块",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad22"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将切好的茄子放入盐水中浸泡，减少吸油量",
                            DurationSec = 600,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa17"),
                            Method = "盐水浸泡",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad23"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将土豆切成细丝，适合快炒或炸薯条",
                            DurationSec = 90,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa18"),
                            Method = "切丝",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad24"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将土豆切成方块，适合炖煮或烧菜",
                            DurationSec = 60,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa18"),
                            Method = "切块",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad25"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将切好的土豆放入清水中浸泡，去除多余淀粉",
                            DurationSec = 300,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa18"),
                            Method = "水浸泡",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad26"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将黄瓜切成圆片，适合凉拌或沙拉",
                            DurationSec = 60,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa19"),
                            Method = "切片",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad27"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将黄瓜切成细丝，适合凉拌或热炒",
                            DurationSec = 60,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa19"),
                            Method = "切丝",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad28"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将西红柿切成方块，适合炒菜或煮汤",
                            DurationSec = 60,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa20"),
                            Method = "切块",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad29"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将西红柿放入沸水中烫30秒，然后迅速放入冷水中，去皮",
                            DurationSec = 120,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa20"),
                            Method = "去皮",
                            TemperatureDesc = "沸水",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad30"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将鸡蛋打入碗中搅拌均匀，适合炒蛋或蒸蛋",
                            DurationSec = 60,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa23"),
                            Method = "打散",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad31"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将鸡蛋放入冷水中，煮沸后继续煮5-7分钟，煮熟",
                            DurationSec = 420,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa23"),
                            Method = "煮熟",
                            TemperatureDesc = "沸水",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad32"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将鱼肉处理后去除鱼刺，便于食用",
                            DurationSec = 180,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa14"),
                            Method = "去刺",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad33"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将鱼肉加入盐、料酒、姜片腌制，去除腥味",
                            DurationSec = 600,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa14"),
                            Method = "腌制",
                            TemperatureDesc = "冷藏",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad34"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "去除虾壳、虾头和虾线，保留虾肉",
                            DurationSec = 180,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa15"),
                            Method = "去壳",
                            TemperatureDesc = "室温",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ad35"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "用盐、料酒、姜片腌制虾肉，去腥增味",
                            DurationSec = 300,
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa15"),
                            Method = "腌制",
                            TemperatureDesc = "冷藏",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FitBites.Domain.Entities.MealPlanDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("MealPlanId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MealTimeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("Servings")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WeekDay")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MealPlanId");

                    b.HasIndex("MealTimeId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("WeekDay");

                    b.HasIndex("MealPlanId", "WeekDay", "MealTimeId");

                    b.ToTable("MealPlanDetails", (string)null);
                });

            modelBuilder.Entity("FitBites.Domain.Entities.MealPlanNutrition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("IngredientNutritionDictId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MealPlanId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("NutrientId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IngredientNutritionDictId");

                    b.HasIndex("MealPlanId");

                    b.HasIndex("NutrientId");

                    b.HasIndex("MealPlanId", "NutrientId")
                        .IsUnique();

                    b.ToTable("MealPlanNutritions", (string)null);
                });

            modelBuilder.Entity("FitBites.Domain.Entities.MealPlanOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("MealPlanId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId1")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("MealPlanId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("Status");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.HasIndex("MealPlanId", "UserId", "RecipeId")
                        .IsUnique();

                    b.ToTable("MealPlanOrders", (string)null);
                });

            modelBuilder.Entity("FitBites.Domain.Entities.MealTimeDict", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name");

                    b.ToTable("MealTimeDicts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afa6"),
                            Code = "BREAKFAST",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "上午7-9点食用，提供一天活力的开始",
                            Name = "早餐",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afa7"),
                            Code = "LUNCH",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "中午11-13点食用，提供一天主要能量来源",
                            Name = "午餐",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afa8"),
                            Code = "DINNER",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "晚上17-19点食用，提供睡前必要营养",
                            Name = "晚餐",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afa9"),
                            Code = "SNACK",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "两餐之间的少量食物补充",
                            Name = "加餐",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FitBites.Domain.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("PermissionCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Module");

                    b.HasIndex("PermissionCode")
                        .IsUnique();

                    b.ToTable("Permissions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66e001"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "系统管理权限",
                            Module = "系统管理",
                            PermissionCode = "system.manage",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66e002"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "创建基础数量菜式（20个）",
                            Module = "菜式管理",
                            PermissionCode = "recipe.create.basic",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66e003"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "创建高级数量菜式（50个）",
                            Module = "菜式管理",
                            PermissionCode = "recipe.create.advanced",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66e004"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "创建最近两周的菜谱",
                            Module = "菜谱管理",
                            PermissionCode = "recipe.timerange.twoweeks",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66e005"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "创建最近两个月的菜谱",
                            Module = "菜谱管理",
                            PermissionCode = "recipe.timerange.twomonths",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66e006"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "最多加入一个家庭",
                            Module = "家庭管理",
                            PermissionCode = "family.count.one",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66e007"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "最多加入五个家庭",
                            Module = "家庭管理",
                            PermissionCode = "family.count.five",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FitBites.Domain.Entities.PermissionMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ExpireTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("char(36)");

                    b.Property<int>("ObjectType")
                        .HasColumnType("int");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ObjectId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("ObjectType", "ObjectId", "PermissionId")
                        .IsUnique();

                    b.ToTable("PermissionMappings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66f104"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObjectId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66a001"),
                            ObjectType = 1,
                            PermissionId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66e001"),
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66f001"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObjectId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66d001"),
                            ObjectType = 0,
                            PermissionId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66e001"),
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66f002"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObjectId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66d001"),
                            ObjectType = 0,
                            PermissionId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66e003"),
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66f003"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObjectId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66d001"),
                            ObjectType = 0,
                            PermissionId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66e005"),
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66f004"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObjectId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66d001"),
                            ObjectType = 0,
                            PermissionId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66e007"),
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66f005"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObjectId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66d002"),
                            ObjectType = 0,
                            PermissionId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66e002"),
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66f006"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObjectId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66d002"),
                            ObjectType = 0,
                            PermissionId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66e004"),
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66f007"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObjectId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66d002"),
                            ObjectType = 0,
                            PermissionId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66e006"),
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66f008"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObjectId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66d003"),
                            ObjectType = 0,
                            PermissionId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66e003"),
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66f009"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObjectId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66d003"),
                            ObjectType = 0,
                            PermissionId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66e005"),
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66f010"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObjectId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66d003"),
                            ObjectType = 0,
                            PermissionId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66e007"),
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FitBites.Domain.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int?>("CookTime")
                        .HasColumnType("int");

                    b.Property<Guid?>("CookingMethodId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("CuisineId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int?>("PrepTime")
                        .HasColumnType("int");

                    b.Property<string>("RecipeName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<bool?>("Recommended")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("Servings")
                        .HasColumnType("int");

                    b.Property<int>("Source")
                        .HasColumnType("int");

                    b.Property<Guid?>("SourceId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("TasteId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CookingMethodId");

                    b.HasIndex("CuisineId");

                    b.HasIndex("DifficultyLevel");

                    b.HasIndex("RecipeName");

                    b.HasIndex("Source");

                    b.HasIndex("SourceId");

                    b.HasIndex("Status");

                    b.HasIndex("TasteId");

                    b.ToTable("Recipes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba01"),
                            CookTime = 15,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff1"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff1"),
                            Description = "鸡丝炒木耳是一道营养健康的家常菜，木耳的脆嫩与鸡丝的鲜香相得益彰，色香味俱全。",
                            DifficultyLevel = 1,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/jisi-muer.jpg",
                            PrepTime = 10,
                            RecipeName = "鸡丝炒木耳",
                            Recommended = true,
                            Servings = 2,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff5"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba02"),
                            CookTime = 20,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff8"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff1"),
                            Description = "麻婆豆腐是四川传统名菜，由豆腐、牛肉末和辣椒等烹制而成，麻辣鲜香，口感丰富。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/mapo-tofu.jpg",
                            PrepTime = 15,
                            RecipeName = "麻婆豆腐",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff8"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba03"),
                            CookTime = 15,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff2"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff2"),
                            Description = "清蒸鱼是一道广东名菜，保留了鱼的鲜美与营养，口感细嫩，清淡鲜香。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/steamed-fish.jpg",
                            PrepTime = 20,
                            RecipeName = "清蒸鱼",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff7"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba04"),
                            CookTime = 15,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff1"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff1"),
                            Description = "宫保鸡丁是川菜代表菜之一，鸡肉鲜嫩，花生香脆，辣味适中，口感丰富。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/kungpao-chicken.jpg",
                            PrepTime = 25,
                            RecipeName = "宫保鸡丁",
                            Recommended = true,
                            Servings = 3,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff5"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba05"),
                            CookTime = 90,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff8"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff3"),
                            Description = "红烧肉是中国特色传统名菜，五花肉经过焯水、煸炒、红烧等工序制作而成，肥而不腻，入口即化。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/braised-pork.jpg",
                            PrepTime = 30,
                            RecipeName = "红烧肉",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff6"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba06"),
                            CookTime = 15,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff1"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff1"),
                            Description = "鱼香肉丝是四川名菜，以猪肉丝、木耳、笋丝等为主料，调以鱼香味型调料烹制而成，酸甜辣香。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/yuxiang-pork.jpg",
                            PrepTime = 25,
                            RecipeName = "鱼香肉丝",
                            Recommended = true,
                            Servings = 3,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff3"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba07"),
                            CookTime = 0,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff9"),
                            Description = "蔬菜沙拉是一道健康低卡的素食料理，富含多种维生素和膳食纤维，清爽可口。",
                            DifficultyLevel = 1,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/vegetable-salad.jpg",
                            PrepTime = 15,
                            RecipeName = "蔬菜沙拉",
                            Recommended = true,
                            Servings = 2,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff6"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba08"),
                            CookTime = 40,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff5"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff2"),
                            Description = "糖醋排骨是一道传统汉族名菜，属于粤菜系。以猪排骨为主料，配以糖、醋等调料烹制而成，口味酸甜可口。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/sweet-sour-ribs.jpg",
                            PrepTime = 20,
                            RecipeName = "糖醋排骨",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff6"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba09"),
                            CookTime = 25,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff3"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff1"),
                            Description = "水煮鱼是四川传统名菜，以鲜嫩的鱼片配以麻辣的汤底，麻辣鲜香，味道浓郁。",
                            DifficultyLevel = 3,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/boiled-fish.jpg",
                            PrepTime = 30,
                            RecipeName = "水煮鱼",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff8"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba10"),
                            CookTime = 10,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff3"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff2"),
                            Description = "蒜蓉西兰花是一道营养丰富的素食菜肴，西兰花保持脆嫩，蒜香浓郁，口感清爽。",
                            DifficultyLevel = 1,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/garlic-broccoli.jpg",
                            PrepTime = 10,
                            RecipeName = "蒜蓉西兰花",
                            Recommended = true,
                            Servings = 3,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff7"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba11"),
                            CookTime = 20,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff3"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff1"),
                            Description = "酸辣汤是一道经典的中式汤品，酸辣可口，配料丰富，开胃爽口。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/hot-sour-soup.jpg",
                            PrepTime = 15,
                            RecipeName = "酸辣汤",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff9"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba12"),
                            CookTime = 10,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff1"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff3"),
                            Description = "西红柿炒鸡蛋是中国最常见的家常菜之一，酸甜可口，色泽鲜艳，营养丰富。",
                            DifficultyLevel = 1,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/tomato-egg.jpg",
                            PrepTime = 5,
                            RecipeName = "西红柿炒鸡蛋",
                            Recommended = true,
                            Servings = 2,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff6"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba13"),
                            CookTime = 20,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff5"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff1"),
                            Description = "干煸四季豆是一道经典川菜，四季豆经过油炸后与肉末一起干煸，干香脆嫩，风味独特。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/fried-green-beans.jpg",
                            PrepTime = 15,
                            RecipeName = "干煸四季豆",
                            Recommended = true,
                            Servings = 3,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affa"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba14"),
                            CookTime = 30,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff1"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff1"),
                            Description = "回锅肉是四川传统名菜，将煮熟的猪肉与青椒、蒜苗一起煸炒，肥而不腻，口感独特。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/twice-cooked-pork.jpg",
                            PrepTime = 20,
                            RecipeName = "回锅肉",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff5"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba15"),
                            CookTime = 5,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff3"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff2"),
                            Description = "蚝油生菜是粤菜的代表菜品之一，清淡爽口，健康营养，制作简单快捷。",
                            DifficultyLevel = 1,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/oyster-sauce-lettuce.jpg",
                            PrepTime = 5,
                            RecipeName = "蚝油生菜",
                            Recommended = true,
                            Servings = 3,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affb"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba16"),
                            CookTime = 150,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff8"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff5"),
                            Description = "东坡肉是江浙名菜，源于宋代文豪苏东坡，肉质软烂，色泽红亮，肥而不腻。",
                            DifficultyLevel = 3,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/dongpo-pork.jpg",
                            PrepTime = 30,
                            RecipeName = "东坡肉",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affc"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba17"),
                            CookTime = 15,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff1"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff3"),
                            Description = "葱爆羊肉是北方传统名菜，羊肉鲜嫩，葱香浓郁，风味独特。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/scallion-lamb.jpg",
                            PrepTime = 20,
                            RecipeName = "葱爆羊肉",
                            Recommended = true,
                            Servings = 3,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affd"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba18"),
                            CookTime = 15,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff2"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff4"),
                            Description = "鸡蛋羹是一道传统的家常蒸菜，口感嫩滑，营养丰富，适合各个年龄段的人食用。",
                            DifficultyLevel = 1,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/steamed-egg.jpg",
                            PrepTime = 5,
                            RecipeName = "鸡蛋羹",
                            Recommended = true,
                            Servings = 2,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affb"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba19"),
                            CookTime = 10,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff7"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff8"),
                            Description = "虎皮青椒是一道家常菜，青椒经过煎制后皮呈焦黄色，状如虎皮，味道鲜香可口。",
                            DifficultyLevel = 1,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/blistered-peppers.jpg",
                            PrepTime = 5,
                            RecipeName = "虎皮青椒",
                            Recommended = true,
                            Servings = 2,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affe"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba20"),
                            CookTime = 8,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff1"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff2"),
                            Description = "香菇油菜是一道简单健康的素食菜肴，香菇鲜香，油菜清脆，营养丰富。",
                            DifficultyLevel = 1,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/mushroom-bokchoy.jpg",
                            PrepTime = 10,
                            RecipeName = "香菇油菜",
                            Recommended = true,
                            Servings = 3,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affb"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba21"),
                            CookTime = 10,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff1"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff3"),
                            Description = "青椒土豆丝是一道家常炒菜，土豆丝脆嫩，青椒清香，简单美味。",
                            DifficultyLevel = 1,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/pepper-potato.jpg",
                            PrepTime = 15,
                            RecipeName = "青椒土豆丝",
                            Recommended = true,
                            Servings = 3,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affe"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba22"),
                            CookTime = 60,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff8"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff4"),
                            Description = "红烧狮子头是江浙名菜，大肉丸形似狮子头，肉质细嫩，味道鲜美。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/braised-meatballs.jpg",
                            PrepTime = 30,
                            RecipeName = "红烧狮子头",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affc"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba23"),
                            CookTime = 20,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff1"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff1"),
                            Description = "鱼香茄子是四川传统名菜，茄子软糯，鱼香味浓郁，酸甜辣香。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/yuxiang-eggplant.jpg",
                            PrepTime = 15,
                            RecipeName = "鱼香茄子",
                            Recommended = true,
                            Servings = 3,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff9"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba24"),
                            CookTime = 60,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff3"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff1"),
                            Description = "蒜泥白肉是四川名菜，将煮熟的猪肉切片，蘸以蒜泥调味汁食用，鲜香爽口。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/garlic-pork.jpg",
                            PrepTime = 20,
                            RecipeName = "蒜泥白肉",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affd"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba25"),
                            CookTime = 120,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff4"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff2"),
                            Description = "番茄牛腩是一道经典粤菜，牛腩炖至软烂，番茄酸甜，汤汁浓郁。",
                            DifficultyLevel = 3,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/tomato-beef-stew.jpg",
                            PrepTime = 30,
                            RecipeName = "番茄牛腩",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff6"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba26"),
                            CookTime = 10,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff1"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff3"),
                            Description = "韭菜炒鸡蛋是一道家常菜，韭菜鲜香，鸡蛋嫩滑，营养丰富。",
                            DifficultyLevel = 1,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/chive-eggs.jpg",
                            PrepTime = 5,
                            RecipeName = "韭菜炒鸡蛋",
                            Recommended = true,
                            Servings = 2,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affb"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba27"),
                            CookTime = 30,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff9"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cffa"),
                            Description = "寿司是日本传统料理，以醋饭配以鱼生、海鲜或蔬菜等食材制成，鲜美可口。",
                            DifficultyLevel = 3,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/sushi.jpg",
                            PrepTime = 40,
                            RecipeName = "日式寿司",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affb"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba28"),
                            CookTime = 25,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff3"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff9"),
                            Description = "意大利肉酱面是西餐中的经典料理，面条搭配番茄肉酱，风味浓郁。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/spaghetti.jpg",
                            PrepTime = 15,
                            RecipeName = "意大利肉酱面",
                            Recommended = true,
                            Servings = 3,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff7"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba29"),
                            CookTime = 30,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff3"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff9"),
                            Description = "冬阴功汤是泰国著名的酸辣汤，以香茅、柠檬叶等香料调味，酸辣鲜香。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/tom-yum-soup.jpg",
                            PrepTime = 20,
                            RecipeName = "泰式冬阴功汤",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff9"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba30"),
                            CookTime = 0,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bffa"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cffb"),
                            Description = "韩式泡菜是韩国传统发酵食品，酸辣爽口，可作为配菜或料理材料。",
                            DifficultyLevel = 3,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/kimchi.jpg",
                            PrepTime = 60,
                            RecipeName = "韩式泡菜",
                            Recommended = true,
                            Servings = 6,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff9"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba31"),
                            CookTime = 15,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff7"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff3"),
                            Description = "葱油饼是中国传统面食，外脆内软，葱香四溢，是受欢迎的早餐或小吃。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/scallion-pancake.jpg",
                            PrepTime = 20,
                            RecipeName = "葱油饼",
                            Recommended = true,
                            Servings = 3,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff7"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba32"),
                            CookTime = 35,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff6"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff1"),
                            Description = "烤鱼是一道美味的烧烤类菜肴，鱼肉嫩滑，外皮酥脆，香辣可口。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/grilled-fish.jpg",
                            PrepTime = 25,
                            RecipeName = "烤鱼",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff8"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba33"),
                            CookTime = 15,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff1"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff3"),
                            Description = "木须肉是一道传统的家常菜，猪肉、鸡蛋、木耳、黄花菜等配料丰富，营养均衡。",
                            DifficultyLevel = 1,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/muxu-pork.jpg",
                            PrepTime = 15,
                            RecipeName = "木须肉",
                            Recommended = true,
                            Servings = 3,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff7"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba34"),
                            CookTime = 180,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff4"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff7"),
                            Description = "佛跳墙是福建闽菜的代表菜之一，由多种山珍海味炖制而成，香气扑鼻，味道鲜美。",
                            DifficultyLevel = 3,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/buddha-jump-wall.jpg",
                            PrepTime = 120,
                            RecipeName = "佛跳墙",
                            Recommended = true,
                            Servings = 6,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affb"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba35"),
                            CookTime = 25,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff5"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff1"),
                            Description = "辣子鸡是四川传统名菜，鸡肉经油炸后与干辣椒一起爆炒，麻辣香脆。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/laziji.jpg",
                            PrepTime = 30,
                            RecipeName = "辣子鸡",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff8"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba36"),
                            CookTime = 10,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff1"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff2"),
                            Description = "蛋炒饭是一道简单美味的家常饭，米饭粒粒分明，鸡蛋香滑，营养美味。",
                            DifficultyLevel = 1,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/egg-fried-rice.jpg",
                            PrepTime = 5,
                            RecipeName = "蛋炒饭",
                            Recommended = true,
                            Servings = 2,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affb"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba37"),
                            CookTime = 0,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff9"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff3"),
                            Description = "拍黄瓜是一道清爽开胃的凉菜，黄瓜脆嫩，调味鲜美，制作简单。",
                            DifficultyLevel = 1,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/smashed-cucumber.jpg",
                            PrepTime = 10,
                            RecipeName = "拍黄瓜",
                            Recommended = true,
                            Servings = 2,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff9"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba38"),
                            CookTime = 20,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff2"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff2"),
                            Description = "清蒸螃蟹是一道鲜美的海鲜料理，保留了螃蟹的原汁原味，肉质鲜嫩。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/steamed-crab.jpg",
                            PrepTime = 15,
                            RecipeName = "清蒸螃蟹",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affb"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba39"),
                            CookTime = 15,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff6"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff9"),
                            Description = "烤羊肉串是新疆特色美食，羊肉鲜嫩多汁，孜然香气四溢，风味独特。",
                            DifficultyLevel = 1,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/lamb-skewers.jpg",
                            PrepTime = 20,
                            RecipeName = "烤羊肉串",
                            Recommended = true,
                            Servings = 3,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff5"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba40"),
                            CookTime = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff1"),
                            Description = "凉拌豆腐是一道简单美味的凉菜，豆腐嫩滑，调味鲜香，清爽开胃。",
                            DifficultyLevel = 1,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/cold-tofu.jpg",
                            PrepTime = 10,
                            RecipeName = "凉拌豆腐",
                            Recommended = true,
                            Servings = 2,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff5"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba41"),
                            CookTime = 15,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff1"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff1"),
                            Description = "酱爆鸭肠是一道特色川菜，鸭肠脆嫩，口感独特，酱香浓郁。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/duck-intestine.jpg",
                            PrepTime = 25,
                            RecipeName = "酱爆鸭肠",
                            Recommended = true,
                            Servings = 3,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff5"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba42"),
                            CookTime = 30,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff8"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff7"),
                            Description = "三杯鸡是台湾特色菜，以一杯酱油、一杯米酒、一杯麻油焖炖而成，鸡肉香嫩入味。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/three-cup-chicken.jpg",
                            PrepTime = 20,
                            RecipeName = "三杯鸡",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affc"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba43"),
                            CookTime = 45,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff3"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff2"),
                            Description = "白切鸡是广东名菜，整鸡煮熟后切块食用，肉质鲜嫩，皮滑肉香。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/white-cut-chicken.jpg",
                            PrepTime = 15,
                            RecipeName = "白切鸡",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affb"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba44"),
                            CookTime = 30,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff3"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff1"),
                            Description = "酸菜鱼是四川名菜，以鲜嫩的鱼片和酸爽的泡菜为主料，酸辣可口，汤鲜味美。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/sour-soup-fish.jpg",
                            PrepTime = 25,
                            RecipeName = "酸菜鱼",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff9"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba45"),
                            CookTime = 15,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff1"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff2"),
                            Description = "炒河粉是广东传统名菜，河粉滑爽，配料丰富，鲜香可口。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/fried-rice-noodles.jpg",
                            PrepTime = 15,
                            RecipeName = "炒河粉",
                            Recommended = true,
                            Servings = 3,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff7"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba46"),
                            CookTime = 90,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff6"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff3"),
                            Description = "北京烤鸭是中国传统名菜，皮酥肉嫩，色泽红亮，香气四溢。",
                            DifficultyLevel = 3,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/peking-duck.jpg",
                            PrepTime = 60,
                            RecipeName = "北京烤鸭",
                            Recommended = true,
                            Servings = 6,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affc"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba47"),
                            CookTime = 90,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff3"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff2"),
                            Description = "莲藕排骨汤是一道滋补汤品，排骨鲜香，莲藕甘甜，汤汁清澈，营养丰富。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/lotus-rib-soup.jpg",
                            PrepTime = 20,
                            RecipeName = "莲藕排骨汤",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affb"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba48"),
                            CookTime = 25,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff2"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff8"),
                            Description = "剁椒鱼头是湖南名菜，以鱼头和剁椒为主料，蒸制而成，鲜辣可口。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/chili-fish-head.jpg",
                            PrepTime = 25,
                            RecipeName = "剁椒鱼头",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff5"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba49"),
                            CookTime = 120,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff8"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff2"),
                            Description = "梅菜扣肉是客家传统名菜，肥肉软烂，梅菜咸香，肥而不腻，味道浓郁。",
                            DifficultyLevel = 3,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/mei-cai-kou-rou.jpg",
                            PrepTime = 30,
                            RecipeName = "梅菜扣肉",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affc"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba50"),
                            CookTime = 30,
                            CookingMethodId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bff8"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CuisineId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66cff4"),
                            Description = "红烧鱼是一道家常菜，鱼肉鲜嫩，汤汁浓郁，色泽红亮，营养丰富。",
                            DifficultyLevel = 2,
                            ImageUrl = "https://fitbites-images.oss-cn-beijing.aliyuncs.com/recipes/braised-fish.jpg",
                            PrepTime = 20,
                            RecipeName = "红烧鱼",
                            Recommended = true,
                            Servings = 4,
                            Source = 0,
                            Status = true,
                            TasteId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affc"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FitBites.Domain.Entities.RecipeCookingStep", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ActionType")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AiInstruction")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("DurationSec")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("IngredientRefs")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool?>("IsOptional")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("char(36)");

                    b.Property<int>("StepNumber")
                        .HasColumnType("int");

                    b.Property<string>("TemperatureDesc")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("VideoUrl")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int?>("WaitTimeSec")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.HasIndex("RecipeId", "StepNumber")
                        .IsUnique();

                    b.ToTable("RecipeCookingSteps", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc01"),
                            ActionType = "切配",
                            AiInstruction = "注意鸡胸肉要顺着纹理切丝，更嫩滑。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "鸡胸肉切成细丝，木耳泡发后撕成小块，青椒切丝，姜切末。",
                            DurationSec = 300,
                            IngredientRefs = "[1,2,3,4]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba01"),
                            StepNumber = 1,
                            TemperatureDesc = "室温",
                            Title = "准备食材",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc02"),
                            ActionType = "腌制",
                            AiInstruction = "这一步可以让鸡肉更加鲜嫩多汁。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "鸡胸肉加入少许盐、料酒和淀粉抓匀，腌制5分钟。",
                            DurationSec = 60,
                            IngredientRefs = "[1]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba01"),
                            StepNumber = 2,
                            TemperatureDesc = "室温",
                            Title = "鸡肉入味",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaitTimeSec = 300
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc03"),
                            ActionType = "爆香",
                            AiInstruction = "油温七成热时下姜末，香气更浓郁。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "锅中倒油烧热，加入姜末爆香。",
                            DurationSec = 30,
                            IngredientRefs = "[4]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba01"),
                            StepNumber = 3,
                            TemperatureDesc = "大火",
                            Title = "爆香姜末",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc04"),
                            ActionType = "翻炒",
                            AiInstruction = "鸡丝变色即可，不要过度炒制以免老柴。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "放入腌制好的鸡丝，快速翻炒至变色。",
                            DurationSec = 90,
                            IngredientRefs = "[1]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba01"),
                            StepNumber = 4,
                            TemperatureDesc = "大火",
                            Title = "炒鸡丝",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc05"),
                            ActionType = "翻炒",
                            AiInstruction = "木耳炒至有光泽即可，不要过久，保持脆嫩口感。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "放入泡发好的木耳，翻炒均匀。",
                            DurationSec = 120,
                            IngredientRefs = "[2]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba01"),
                            StepNumber = 5,
                            TemperatureDesc = "大火",
                            Title = "加入木耳",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc06"),
                            ActionType = "翻炒",
                            AiInstruction = "青椒炒至断生即可，保持色泽翠绿。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "放入青椒丝，快速翻炒均匀。",
                            DurationSec = 60,
                            IngredientRefs = "[3]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba01"),
                            StepNumber = 6,
                            TemperatureDesc = "大火",
                            Title = "加入青椒",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc07"),
                            ActionType = "调味",
                            AiInstruction = "根据个人口味调整咸淡，木耳本身有味道，注意少放盐。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "加入酱油和少许盐，翻炒均匀。",
                            DurationSec = 30,
                            IngredientRefs = "[5]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba01"),
                            StepNumber = 7,
                            TemperatureDesc = "大火",
                            Title = "调味",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc08"),
                            ActionType = "装盘",
                            AiInstruction = "可以撒上少许香葱提香增色。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "装盘即可食用。",
                            DurationSec = 30,
                            IngredientRefs = "[]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba01"),
                            StepNumber = 8,
                            Title = "出锅",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc09"),
                            ActionType = "切配",
                            AiInstruction = "豆腐切成约2厘米见方的小块，方便入味。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "豆腐切成小方块，蒜切末。",
                            DurationSec = 300,
                            IngredientRefs = "[6,7]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba02"),
                            StepNumber = 1,
                            TemperatureDesc = "室温",
                            Title = "准备食材",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc20"),
                            ActionType = "清洗处理",
                            AiInstruction = "刀口不要太深，以免破坏鱼的整体性。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将鱼清洗干净，去除内脏和鳞片，在鱼身两侧划几刀，便于入味。",
                            DurationSec = 300,
                            IngredientRefs = "[14]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba03"),
                            StepNumber = 1,
                            TemperatureDesc = "室温",
                            Title = "鱼的处理",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc21"),
                            ActionType = "腌制",
                            AiInstruction = "料酒可以有效去除鱼的腥味，使鱼肉更加鲜美。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将鱼均匀抹上盐和料酒，腌制10分钟去腥增鲜。",
                            DurationSec = 60,
                            IngredientRefs = "[14,7]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba03"),
                            StepNumber = 2,
                            TemperatureDesc = "室温",
                            Title = "腌制鱼",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaitTimeSec = 600
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc22"),
                            ActionType = "切配",
                            AiInstruction = "姜丝最好切细一些，葱段和葱花分开备用。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "姜切丝，葱切段，部分葱切成葱花。",
                            DurationSec = 180,
                            IngredientRefs = "[4,24]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba03"),
                            StepNumber = 3,
                            TemperatureDesc = "室温",
                            Title = "准备配料",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc23"),
                            ActionType = "摆盘",
                            AiInstruction = "姜丝和葱段均匀分布在鱼身上，有助于去腥增香。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将鱼放在蒸盘上，鱼身上铺上姜丝和一半的葱段。",
                            DurationSec = 120,
                            IngredientRefs = "[14,4,24]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba03"),
                            StepNumber = 4,
                            TemperatureDesc = "室温",
                            Title = "摆盘准备",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc24"),
                            ActionType = "蒸",
                            AiInstruction = "蒸鱼时间不宜过长，以免鱼肉老化失去鲜嫩口感。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "将鱼放入蒸锅中，水烧开后蒸8-10分钟。",
                            DurationSec = 600,
                            IngredientRefs = "[14]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba03"),
                            StepNumber = 5,
                            TemperatureDesc = "高温蒸汽",
                            Title = "蒸鱼",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc25"),
                            ActionType = "调味",
                            AiInstruction = "油温不要太高，防止酱油糊化。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "锅中倒入少许油烧热，加入酱油和少许白糖调味。",
                            DurationSec = 60,
                            IngredientRefs = "[6]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba03"),
                            StepNumber = 6,
                            TemperatureDesc = "中火",
                            Title = "制作调味汁",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc26"),
                            ActionType = "浇汁",
                            AiInstruction = "热油浇在葱花上可以激发出葱的香气，增添菜品风味。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "鱼蒸好后，去除姜丝和葱段，撒上葱花，浇上热油和调味汁。",
                            DurationSec = 60,
                            IngredientRefs = "[14,24,6]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba03"),
                            StepNumber = 7,
                            TemperatureDesc = "热油",
                            Title = "最终处理",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc30"),
                            ActionType = "切配",
                            AiInstruction = "牛肉要切成大小均匀的块，便于均匀入味和烹饪。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "牛肉切成2-3厘米的方块，姜切片，蒜切末，葱切段。",
                            DurationSec = 300,
                            IngredientRefs = "[9,4,5,24]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba05"),
                            StepNumber = 1,
                            TemperatureDesc = "室温",
                            Title = "准备食材",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc31"),
                            ActionType = "焯水",
                            AiInstruction = "焯水可以去除牛肉中的血水和异味，使最终成菜更加鲜美。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "锅中加水烧开，放入牛肉块焯水3分钟，去除血水和杂质。",
                            DurationSec = 180,
                            IngredientRefs = "[9]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba05"),
                            StepNumber = 2,
                            TemperatureDesc = "沸水",
                            Title = "焯水",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc32"),
                            ActionType = "爆香",
                            AiInstruction = "爆香料头是红烧菜品的关键步骤，可以激发出香料的风味。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "锅中倒油烧热，放入姜片、蒜末、葱段爆香。",
                            DurationSec = 90,
                            IngredientRefs = "[4,5,24]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba05"),
                            StepNumber = 3,
                            TemperatureDesc = "中火",
                            Title = "爆香料头",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc33"),
                            ActionType = "煸炒",
                            AiInstruction = "煸炒牛肉可以封住肉汁，使牛肉更加鲜嫩。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "放入焯好水的牛肉块，翻炒至表面微微变色。",
                            DurationSec = 180,
                            IngredientRefs = "[9]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba05"),
                            StepNumber = 4,
                            TemperatureDesc = "大火",
                            Title = "煸炒牛肉",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc34"),
                            ActionType = "调味",
                            AiInstruction = "酱油提供咸味和色泽，白糖可以中和酱油的咸味并增加光泽。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "加入酱油、白糖、料酒和适量清水，没过牛肉。",
                            DurationSec = 60,
                            IngredientRefs = "[6]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba05"),
                            StepNumber = 5,
                            TemperatureDesc = "大火",
                            Title = "加入调料",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc35"),
                            ActionType = "炖煮",
                            AiInstruction = "耐心炖煮是红烧牛肉的关键，时间足够长才能使牛肉变得酥烂入味。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "大火烧开后转小火，盖上锅盖慢炖1.5-2小时，直至牛肉酥烂。",
                            DurationSec = 7200,
                            IngredientRefs = "[9]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba05"),
                            StepNumber = 6,
                            TemperatureDesc = "小火",
                            Title = "炖煮",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc36"),
                            ActionType = "收汁",
                            AiInstruction = "收汁时要注意控制火候，避免炒糊。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "牛肉炖烂后，开大火收汁至浓稠。",
                            DurationSec = 300,
                            IngredientRefs = "[9]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba05"),
                            StepNumber = 7,
                            TemperatureDesc = "大火",
                            Title = "收汁",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc10"),
                            ActionType = "焯水",
                            AiInstruction = "焯水可以去除豆腐的生腥味，使豆腐更容易吸收调料的味道。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "锅中加水烧开，放入豆腐焯水30秒，捞出沥干水分。",
                            DurationSec = 60,
                            IngredientRefs = "[6]",
                            IsOptional = true,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba02"),
                            StepNumber = 2,
                            TemperatureDesc = "沸水",
                            Title = "焯水豆腐",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc11"),
                            ActionType = "爆香",
                            AiInstruction = "油温不要太高，避免蒜末炒糊。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "锅中倒油烧热，加入蒜末爆香。",
                            DurationSec = 60,
                            IngredientRefs = "[7]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba02"),
                            StepNumber = 3,
                            TemperatureDesc = "中火",
                            Title = "炒香调料",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc12"),
                            ActionType = "炒制",
                            AiInstruction = "慢火炒豆瓣酱，让香味充分释放出来。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "加入豆瓣酱炒出红油。",
                            DurationSec = 90,
                            IngredientRefs = "[]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba02"),
                            StepNumber = 4,
                            TemperatureDesc = "小火",
                            Title = "炒豆瓣酱",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc13"),
                            ActionType = "焖煮",
                            AiInstruction = "动作要轻，避免把豆腐弄碎。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "倒入适量清水，然后放入豆腐块，小心翻动均匀。",
                            DurationSec = 180,
                            IngredientRefs = "[6]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba02"),
                            StepNumber = 5,
                            TemperatureDesc = "中小火",
                            Title = "加入豆腐",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc14"),
                            ActionType = "勾芡",
                            AiInstruction = "水淀粉要边倒边搅拌，避免结块。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "加入少许盐调味，用水淀粉勾芡。",
                            DurationSec = 60,
                            IngredientRefs = "[8]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba02"),
                            StepNumber = 6,
                            TemperatureDesc = "小火",
                            Title = "勾芡调味",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bc15"),
                            ActionType = "装盘",
                            AiInstruction = "花椒粉增添麻味，是麻婆豆腐的灵魂。",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "撒上花椒粉和葱花，装盘即可。",
                            DurationSec = 30,
                            IngredientRefs = "[]",
                            IsOptional = false,
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba02"),
                            StepNumber = 7,
                            Title = "出锅装盘",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FitBites.Domain.Entities.RecipeIngredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("IngredientId1")
                        .HasColumnType("char(36)");

                    b.Property<string>("IngredientWeight")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsKeyIngredient")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PostProcessImage")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("ProcessMethod")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("RoleType")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UsageMethod")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UsageOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("IngredientId1");

                    b.HasIndex("RecipeId");

                    b.HasIndex("RoleType");

                    b.HasIndex("RecipeId", "IngredientId")
                        .IsUnique();

                    b.ToTable("RecipeIngredients", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bb01"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa01"),
                            IngredientWeight = "200g",
                            IsKeyIngredient = true,
                            Notes = "鸡胸肉要切成细丝，更容易入味且口感好",
                            ProcessMethod = "切丝",
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba01"),
                            RoleType = "主料",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageMethod = "先炒",
                            UsageOrder = 1
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bb02"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa08"),
                            IngredientWeight = "100g",
                            IsKeyIngredient = true,
                            Notes = "木耳要提前泡发，去除硬根",
                            ProcessMethod = "泡发,撕小块",
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba01"),
                            RoleType = "主料",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageMethod = "后炒",
                            UsageOrder = 2
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bb03"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa03"),
                            IngredientWeight = "1个",
                            IsKeyIngredient = false,
                            Notes = "青椒提香增色，可以根据个人喜好增减",
                            ProcessMethod = "切丝",
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba01"),
                            RoleType = "辅料",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageMethod = "最后炒",
                            UsageOrder = 3
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bb04"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa04"),
                            IngredientWeight = "适量",
                            IsKeyIngredient = false,
                            Notes = "姜末用于去腥提香",
                            ProcessMethod = "切末",
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba01"),
                            RoleType = "调料",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageMethod = "爆香",
                            UsageOrder = 0
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bb05"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa06"),
                            IngredientWeight = "1勺",
                            IsKeyIngredient = false,
                            Notes = "提鲜上色",
                            ProcessMethod = "原样",
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba01"),
                            RoleType = "调料",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageMethod = "调味",
                            UsageOrder = 4
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bb06"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa02"),
                            IngredientWeight = "500g",
                            IsKeyIngredient = true,
                            Notes = "选用嫩豆腐，口感更好",
                            ProcessMethod = "切块",
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba02"),
                            RoleType = "主料",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageMethod = "煮",
                            UsageOrder = 1
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bb07"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa05"),
                            IngredientWeight = "适量",
                            IsKeyIngredient = false,
                            Notes = "蒜末增香提味",
                            ProcessMethod = "切末",
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba02"),
                            RoleType = "调料",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageMethod = "爆香",
                            UsageOrder = 0
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66bb08"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IngredientId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aa07"),
                            IngredientWeight = "少许",
                            IsKeyIngredient = false,
                            Notes = "根据个人口味添加",
                            ProcessMethod = "原样",
                            RecipeId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66ba02"),
                            RoleType = "调料",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageMethod = "调味",
                            UsageOrder = 3
                        });
                });

            modelBuilder.Entity("FitBites.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("RoleCode")
                        .IsUnique();

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66d001"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "拥有所有权限，包括系统管理、用户管理、内容管理等",
                            RoleCode = "ADMIN",
                            RoleName = "系统管理员",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66d002"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "基础权限：只能创建20个菜式，创建最近两周的菜谱，只能在一个家庭里面",
                            RoleCode = "USER",
                            RoleName = "普通用户",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66d003"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "高级权限：能创建50个菜式，创建最近两个月的菜谱，可以在5个家庭里面",
                            RoleCode = "VIP",
                            RoleName = "VIP用户",
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FitBites.Domain.Entities.TasteDict", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name");

                    b.HasIndex("SortOrder");

                    b.HasIndex("Status");

                    b.ToTable("TasteDicts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff1"),
                            Code = "SWEET",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "以甜为主要口味",
                            Name = "甜味",
                            SortOrder = 1,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff2"),
                            Code = "SALTY",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "以咸为主要口味",
                            Name = "咸味",
                            SortOrder = 2,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff3"),
                            Code = "SOUR",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "以酸为主要口味",
                            Name = "酸味",
                            SortOrder = 3,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff4"),
                            Code = "BITTER",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "以苦为主要口味",
                            Name = "苦味",
                            SortOrder = 4,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff5"),
                            Code = "SPICY",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "以辣为主要口味",
                            Name = "辣味",
                            SortOrder = 5,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff6"),
                            Code = "SWEET_SOUR",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "酸甜搭配的口味",
                            Name = "酸甜",
                            SortOrder = 6,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff7"),
                            Code = "SALTY_FRESH",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "咸鲜搭配的口味",
                            Name = "咸鲜",
                            SortOrder = 7,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff8"),
                            Code = "SPICY_HOT",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "麻辣搭配的口味",
                            Name = "麻辣",
                            SortOrder = 8,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66aff9"),
                            Code = "SOUR_SPICY",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "酸辣搭配的口味",
                            Name = "酸辣",
                            SortOrder = 9,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affa"),
                            Code = "SALTY_SPICY",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "咸辣搭配的口味",
                            Name = "咸辣",
                            SortOrder = 10,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affb"),
                            Code = "FRESH",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "以清淡为主要口味",
                            Name = "清淡",
                            SortOrder = 11,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affc"),
                            Code = "SWEET_SALTY",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "甜咸搭配的口味",
                            Name = "甜咸",
                            SortOrder = 12,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affd"),
                            Code = "FRESH_SPICY",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "鲜辣搭配的口味",
                            Name = "鲜辣",
                            SortOrder = 13,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66affe"),
                            Code = "LIGHT_SPICY",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "轻微辣味，口感温和",
                            Name = "微辣",
                            SortOrder = 14,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FitBites.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<DateTime?>("RefreshTokenExpireTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Phone");

                    b.HasIndex("RefreshToken");

                    b.HasIndex("Status");

                    b.HasIndex("UserCode")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66a001"),
                            Avatar = "/assets/images/avatars/admin.png",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nickname = "系统管理员",
                            Password = "21232f297a57a5a743894a0e4a801fc3",
                            Phone = "13800000000",
                            Status = 1,
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCode = "ADMIN001",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("FitBites.Domain.Entities.UserHumanGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("Confidence")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("Source")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("Source");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId", "GroupId")
                        .IsUnique();

                    b.ToTable("UserHumanGroups", (string)null);
                });

            modelBuilder.Entity("FitBites.Domain.Entities.UserPreference", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PreferenceType")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("char(36)");

                    b.Property<int>("TargetType")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PreferenceType");

                    b.HasIndex("TargetId");

                    b.HasIndex("TargetType");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId", "TargetType", "TargetId", "PreferenceType")
                        .IsUnique();

                    b.ToTable("UserPreferences", (string)null);
                });

            modelBuilder.Entity("FitBites.Domain.Entities.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId", "RoleId")
                        .IsUnique();

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66a101"),
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66d001"),
                            UpdatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("3fa85f64-5717-4562-b3fc-2c963f66a001")
                        });
                });

            modelBuilder.Entity("FitBites.Domain.Entities.WeeklyMealPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatorUserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("FamilyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("FamilyId1")
                        .HasColumnType("char(36)");

                    b.Property<string>("PlanCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId1")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId2")
                        .HasColumnType("char(36)");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("EndDate");

                    b.HasIndex("FamilyId");

                    b.HasIndex("FamilyId1");

                    b.HasIndex("PlanCode")
                        .IsUnique();

                    b.HasIndex("StartDate");

                    b.HasIndex("Status");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.HasIndex("UserId2");

                    b.HasIndex("Year", "WeekNumber");

                    b.ToTable("WeeklyMealPlans", (string)null);
                });

            modelBuilder.Entity("FitBites.Domain.Entities.Family", b =>
                {
                    b.HasOne("FitBites.Domain.Entities.User", "Owner")
                        .WithMany("OwnedFamilies")
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.FamilyMember", b =>
                {
                    b.HasOne("FitBites.Domain.Entities.Family", "Family")
                        .WithMany("Members")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitBites.Domain.Entities.User", "User")
                        .WithMany("FamilyMemberships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Family");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.IngredientHumanGroup", b =>
                {
                    b.HasOne("FitBites.Domain.Entities.HumanGroupDict", "HumanGroup")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FitBites.Domain.Entities.HumanGroupDict", null)
                        .WithMany("IngredientHumanGroups")
                        .HasForeignKey("HumanGroupDictId");

                    b.HasOne("FitBites.Domain.Entities.Ingredient", "Ingredient")
                        .WithMany("HumanGroups")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HumanGroup");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.IngredientNutrition", b =>
                {
                    b.HasOne("FitBites.Domain.Entities.Ingredient", "Ingredient")
                        .WithMany("Nutritions")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitBites.Domain.Entities.IngredientNutritionDict", "Nutrient")
                        .WithMany("IngredientNutritions")
                        .HasForeignKey("NutrientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Nutrient");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.IngredientPreprocess", b =>
                {
                    b.HasOne("FitBites.Domain.Entities.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitBites.Domain.Entities.Ingredient", null)
                        .WithMany("Preprocesses")
                        .HasForeignKey("IngredientId1");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.MealPlanDetail", b =>
                {
                    b.HasOne("FitBites.Domain.Entities.WeeklyMealPlan", "MealPlan")
                        .WithMany("Details")
                        .HasForeignKey("MealPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitBites.Domain.Entities.MealTimeDict", "MealTime")
                        .WithMany()
                        .HasForeignKey("MealTimeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FitBites.Domain.Entities.Recipe", "Recipe")
                        .WithMany("MealPlanDetails")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MealPlan");

                    b.Navigation("MealTime");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.MealPlanNutrition", b =>
                {
                    b.HasOne("FitBites.Domain.Entities.IngredientNutritionDict", null)
                        .WithMany("MealPlanNutritions")
                        .HasForeignKey("IngredientNutritionDictId");

                    b.HasOne("FitBites.Domain.Entities.WeeklyMealPlan", "MealPlan")
                        .WithMany("Nutritions")
                        .HasForeignKey("MealPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitBites.Domain.Entities.IngredientNutritionDict", "Nutrient")
                        .WithMany()
                        .HasForeignKey("NutrientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MealPlan");

                    b.Navigation("Nutrient");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.MealPlanOrder", b =>
                {
                    b.HasOne("FitBites.Domain.Entities.WeeklyMealPlan", "MealPlan")
                        .WithMany("Orders")
                        .HasForeignKey("MealPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitBites.Domain.Entities.Recipe", "Recipe")
                        .WithMany("MealPlanOrders")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FitBites.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FitBites.Domain.Entities.User", null)
                        .WithMany("MealPlanOrders")
                        .HasForeignKey("UserId1");

                    b.Navigation("MealPlan");

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.PermissionMapping", b =>
                {
                    b.HasOne("FitBites.Domain.Entities.Role", "Role")
                        .WithMany("PermissionMappings")
                        .HasForeignKey("ObjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_PermissionMappings_Roles_ObjectId");

                    b.HasOne("FitBites.Domain.Entities.User", "User")
                        .WithMany("PermissionMappings")
                        .HasForeignKey("ObjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_PermissionMappings_Users_ObjectId");

                    b.HasOne("FitBites.Domain.Entities.Permission", "Permission")
                        .WithMany("PermissionMappings")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.Recipe", b =>
                {
                    b.HasOne("FitBites.Domain.Entities.CookingMethodDict", "CookingMethod")
                        .WithMany("Recipes")
                        .HasForeignKey("CookingMethodId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FitBites.Domain.Entities.CuisineDict", "Cuisine")
                        .WithMany("Recipes")
                        .HasForeignKey("CuisineId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FitBites.Domain.Entities.TasteDict", "Taste")
                        .WithMany("Recipes")
                        .HasForeignKey("TasteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CookingMethod");

                    b.Navigation("Cuisine");

                    b.Navigation("Taste");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.RecipeCookingStep", b =>
                {
                    b.HasOne("FitBites.Domain.Entities.Recipe", "Recipe")
                        .WithMany("CookingSteps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("FitBites.Domain.Entities.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FitBites.Domain.Entities.Ingredient", null)
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId1");

                    b.HasOne("FitBites.Domain.Entities.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.UserHumanGroup", b =>
                {
                    b.HasOne("FitBites.Domain.Entities.HumanGroupDict", "HumanGroup")
                        .WithMany("UserHumanGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitBites.Domain.Entities.User", "User")
                        .WithMany("UserHumanGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HumanGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.UserPreference", b =>
                {
                    b.HasOne("FitBites.Domain.Entities.User", "User")
                        .WithMany("UserPreferences")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("FitBites.Domain.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitBites.Domain.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.WeeklyMealPlan", b =>
                {
                    b.HasOne("FitBites.Domain.Entities.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FitBites.Domain.Entities.Family", "Family")
                        .WithMany()
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FitBites.Domain.Entities.Family", null)
                        .WithMany("FamilyMealPlans")
                        .HasForeignKey("FamilyId1");

                    b.HasOne("FitBites.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FitBites.Domain.Entities.User", null)
                        .WithMany("PersonalMealPlans")
                        .HasForeignKey("UserId1");

                    b.HasOne("FitBites.Domain.Entities.User", null)
                        .WithMany("CreatedMealPlans")
                        .HasForeignKey("UserId2");

                    b.Navigation("Creator");

                    b.Navigation("Family");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.CookingMethodDict", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.CuisineDict", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.Family", b =>
                {
                    b.Navigation("FamilyMealPlans");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.HumanGroupDict", b =>
                {
                    b.Navigation("IngredientHumanGroups");

                    b.Navigation("UserHumanGroups");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.Ingredient", b =>
                {
                    b.Navigation("HumanGroups");

                    b.Navigation("Nutritions");

                    b.Navigation("Preprocesses");

                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.IngredientNutritionDict", b =>
                {
                    b.Navigation("IngredientNutritions");

                    b.Navigation("MealPlanNutritions");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.Permission", b =>
                {
                    b.Navigation("PermissionMappings");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.Recipe", b =>
                {
                    b.Navigation("CookingSteps");

                    b.Navigation("Ingredients");

                    b.Navigation("MealPlanDetails");

                    b.Navigation("MealPlanOrders");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.Role", b =>
                {
                    b.Navigation("PermissionMappings");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.TasteDict", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.User", b =>
                {
                    b.Navigation("CreatedMealPlans");

                    b.Navigation("FamilyMemberships");

                    b.Navigation("MealPlanOrders");

                    b.Navigation("OwnedFamilies");

                    b.Navigation("PermissionMappings");

                    b.Navigation("PersonalMealPlans");

                    b.Navigation("UserHumanGroups");

                    b.Navigation("UserPreferences");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("FitBites.Domain.Entities.WeeklyMealPlan", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("Nutritions");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
